C51 COMPILER V9.06   ADC                                                                   07/10/2012 09:55:59 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN ADC.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ADC.c OPTIMIZE(9,SIZE) BROWSE INCDIR(C:\Keil\C51\INC\SiLABS) DEBUG OBJECTEX
                    -TEND

line level    source

   1          #include "C8051F020.h" 
   2           
   3          
   4          
   5          void wandlascii(unsigned int e,char k);
   6          
   7          
   8          
   9          
  10          extern unsigned char ken1[12];
  11          extern unsigned char ken2[12];
  12          extern unsigned char ken3[12];
  13          extern unsigned char ken4[12];
  14          extern unsigned char ken5[12];
  15          
  16          //union
  17          //{
  18          //      unsigned char c[2];
  19          //      unsigned int  i;
  20          //}cw;
  21          //
  22          //
  23          //
  24          //
  25          //void AD_Wand (bit w,char k)
  26          //{
  27          //      unsigned int temp,sp;
  28          //      AMX0SL=k;
  29          //      AD0LJST=w;
  30          //      AD0BUSY=1;           //ADWandlung läuft
  31          //      while(AD0INT==0); //prüf ob ADWandlung(-> mit Flag AD0INT==1)
  32          //      cw.c[0]=ADC0H;    //übername der gewandelten werte (highbyte)
  33          //      cw.c[1]=ADC0L;    //übername der gewandelten werte (lowbyte)
  34          //      AD0INT=0;
  35          //      if(w==1)
  36          //      {
  37          //              temp=(cw.i-21190)*10/78;  //berechnung des Temperaturwertes in °C
  38          //              wandlascii(temp,1);
  39          //      }
  40          //      else 
  41          //      {
  42          //              sp=((unsigned long)cw.i*2400)/4096;     //berechnung des Spannungswertes in mV (unsigned long wird benötig
             -t da großer zwischen wert)
  43          //              wandlascii(sp,2);                 
  44          //      }
  45          //}
  46          
  47          
  48          
  49          
  50          
  51          
  52          
  53          void wandlascii(unsigned int e,char k)
C51 COMPILER V9.06   ADC                                                                   07/10/2012 09:55:59 PAGE 2   

  54          {       
  55   1      
  56   1              switch (k)
  57   1              {
  58   2              case 1: //temp
  59   2                      {
  60   3                              ken1[6]=e/100+0x30;
  61   3                              e=e%100;
  62   3                              ken1[7]=e/10+0x30;
  63   3                              e=e%10;
  64   3                              ken1[9]=e/1+0x30;
  65   3                              break;
  66   3      
  67   3                      }
  68   2              case 2:   // poti
  69   2                      {
  70   3                              ken2[7]=e/1000+ 0x30;
  71   3                              e = e % 1000;
  72   3                              ken2[9]=e/100+ 0x30;
  73   3                              e = e % 100;
  74   3                              ken2[10]=e/10 + 0x30;
  75   3                              break; 
  76   3                      }
  77   2              case 3:  //frequenz1
  78   2                      {
  79   3                              ken3[5]=(e/10000)+ 0x30;
  80   3                              e = e % 10000;
  81   3                              ken3[6]=(e/1000)+ 0x30;
  82   3                              e = e % 1000;
  83   3                              ken3[8]=(e/100) + 0x30;
  84   3                              break; 
  85   3                      }
  86   2              case 4:  //frequenz2
  87   2                      {
  88   3                              ken4[6]=(e/10)+0x30;
  89   3                              e=e%10; 
  90   3                              ken4[7]=e+0x30;
  91   3                              break;
  92   3                      }
  93   2              }
  94   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    200    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
