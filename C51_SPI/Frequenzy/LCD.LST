C51 COMPILER V9.06   LCD                                                                   08/29/2012 10:03:30 PAGE 1   


C51 COMPILER V9.06, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN LCD.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCD.c OPTIMIZE(9,SIZE) BROWSE INCDIR(C:\Keil\C51\INC\SiLABS) DEBUG OBJECTEX
                    -TEND

line level    source

   1          #include "C8051F020.h"
   2          #include "define.h"
   3          
   4          
   5          
   6          
   7          
   8          extern bit LCD_init;                    //bei 0x18 entscheidet sich ob initialisierung (3 byte) oder Datenbyte
   9          extern bit SM_BUSY;                     /* = 1 I2C-Bus belegt */
  10          extern unsigned char CONTROL_LCD;
  11          extern unsigned char Text_RAM[14];
  12          extern unsigned char k;
  13          extern unsigned char in;
  14          
  15          
  16          void Init_LCD();
  17          void LCD_write();
  18          
  19          void SMBus_ISR(void) interrupt 7
  20          {
  21   1              switch (SMB0STA)
  22   1              {
  23   2                      case SMB_START : 
  24   2                      {
  25   3                                                              SMB0DAT=ADR_LCD;                        //(slave-Addresse + WR)
  26   3                                                              STA=0;                                                  //Clear START-Bit
  27   3                      }break;
  28   2                      case SMB_CTRL_SEND:
  29   2                      {
  30   3                                                              SMB0DAT=CONTROL_LCD;                            //Config-Byte wird gesendet
  31   3                      }break;
  32   2                      case SMB_DATA_SEND:
  33   2                                                              if (LCD_init==1) 
  34   2                                                              {
  35   3                                                                      Init_LCD();
  36   3                                                              }
  37   2                                                              else 
  38   2                                                              {
  39   3                                                                      unsigned char x = 0;
  40   3                                                                      if (k >= 2) x = 1;
  41   3                                                                      SMB0DAT = (Text_RAM[k]+(x*0x80));
  42   3                                                                      k++;    
  43   3                                                                      if (k == 15)
  44   3                                                                      {
  45   4                                                                              SM_BUSY = 0;
  46   4                                                                              STO = 1;
  47   4                                                                              k = 0;
  48   4                                                                      }
  49   3                                                              }break;
  50   2                                                                      
  51   2                      default:        
  52   2                                                              //SM_BUSY = 0; // SMBus freigeben
  53   2                                                              break;
  54   2                      }
C51 COMPILER V9.06   LCD                                                                   08/29/2012 10:03:30 PAGE 2   

  55   1                      SI=0;
  56   1      }
  57          
  58          void show_display (unsigned char Zeile, unsigned char Message[12])
  59          {
  60   1              unsigned char k;
  61   1              LCD_init = 0; // Text ausgeben
  62   1              CONTROL_LCD = SMB_SRODBACK; 
  63   1              switch (Zeile)
  64   1              {
  65   2                      case 1:
  66   2                                      Text_RAM[0] = Zeile1;
  67   2                                      break;
  68   2                      case 2:
  69   2                                      Text_RAM[0] = Zeile2;
  70   2                                      break;
  71   2                      case 3: 
  72   2                                      Text_RAM[0] = Zeile3;
  73   2                                      break;
  74   2                      default:
  75   2                                      break;
  76   2              }
  77   1              Text_RAM[1] = SMB_MRADDACK;
  78   1              for (k=0; k<=11; k++)
  79   1                      Text_RAM[k+2] = (Message[k]);   //Text_RAM[k+2] = Textfeld[Zeile-1][k];
  80   1              LCD_write();
  81   1      }
  82          
  83          
  84          void Init_LCD()  /*Teil der LCD_ISR*/  //fertig!!   
  85          {
  86   1              switch (in)
  87   1              {
  88   2                      case 0: 
  89   2                      {               SMB0DAT=0x3E;           //Function_Set
  90   3                                      in++;
  91   3                      }break;
  92   2      
  93   2                      case 1:                         
  94   2                      {               SMB0DAT=0x0F;           //Display-control  
  95   3                                      in++;
  96   3                      }break;
  97   2      
  98   2                      case 2:                 
  99   2                      {               SMB0DAT=0x06;           //Entry mode 
 100   3                                      in++;
 101   3                      }break;
 102   2      
 103   2                      case 3:                         
 104   2                      {               SM_BUSY = 0;
 105   3                                      STO=1;
 106   3                                      in=0;
 107   3                      }break;
 108   2              }
 109   1      }
 110          
 111          
 112          void LCD_write()
 113          {
 114   1              while (SM_BUSY);
 115   1              SM_BUSY=1;
 116   1              EIE1 |= 0x02;                             //Datentransfer gestartet
C51 COMPILER V9.06   LCD                                                                   08/29/2012 10:03:30 PAGE 3   

 117   1              STO=0;
 118   1              STA=1;
 119   1              while (SM_BUSY);                          
 120   1              EIE1 &=0xFD;
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    265    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
